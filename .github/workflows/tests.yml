name: Tests
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
env:
  INTEG_TEST_ROLE: "arn:aws:iam::829732496883:role/github-integration-test"
  DEFAULT_REGION: "us-west-2"

jobs:
  tests:
    runs-on: ubuntu-latest
    name: Run unit and integration tests
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run unit tests
        run: |
          npm ci
          npm run test
      - name: Codecov
        uses: codecov/codecov-action@v3.1.1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.INTEG_TEST_ROLE }}
          aws-region: ${{ env.DEFAULT_REGION }}
      - name: Test Get Secrets Action
        # Run your local version of the action
        uses: ./
        with:
          secret-ids: |
            test/*
            SECRET_ALIAS,app/secret
          parse-json-secrets: true
      - name: Test Expected Values
        run: |
          if [ "${TEST_SECRET_1}" != "test1" ]; then
          echo "TEST_SECRET_1 is not expected value"
          exit 1
          fi
          if [ "${TEST_SECRET_2}" != "test2" ]; then
          echo "TEST_SECRET_2 is not expected value"
          exit 1
          fi
          if [ "${TEST_DATABASE_USERNAME}" != "admin" ]; then
          echo "TEST_DATABASE_USERNAME is not expected value"
          exit 1
          fi
          if [ "${TEST_DATABASE_PASSWORD}" != "test" ]; then
          echo "TEST_DATABASE_PASSWORD is not expected value"
          exit 1
          fi
          if [ "${TEST_DATABASE_HOST}" != "127.0.0.1" ]; then
          echo "TEST_DATABASE_HOST is not expected value"
          exit 1
          fi
          if [ "${TEST_DATABASE_PORT}" != "3600" ]; then
          echo "TEST_DATABASE_PORT is not expected value"
          exit 1
          fi
          if [ "${TEST_DATABASE_DBNAME}" != "test" ]; then
          echo "TEST_DATABASE_DBNAME is not expected value"
          exit 1
          fi
          if [ "${SECRET_ALIAS_USERNAME}" != "api_user" ]; then
          echo "SECRET_ALIAS_USERNAME is not expected value"
          exit 1
          fi
          if [ "${SECRET_ALIAS_API_KEY}" != "key" ]; then
          echo "SECRET_ALIAS_API_KEY is not expected value"
          exit 1
          fi
          fi
          echo "Tests passed"
          exit 0
